continue
params[:id]
continue
Transaction.all
transactions
continue
transactions
continue
RecycleBin.all
continue
transactions
continue
Transaction.all
transactions
continue
Capital.where(user_id: 6)
Capital.find_by(user_id: 6)
Capital.find(user_id: 6)
Capital.all
Capitals.all
capitals
continue
capitals
continue
capitals.is_a? Array
continue
capitals.is_a? Array
continue
Capital.find_by(user_id: params[:id]).count
capitals
capitals.all
Array.new(capitals)
capitals.to_a
capitals.all
capitals
continue
RecycleBin.all
continue
curr_user
continue
curr_user
continue
Capital.find_by_id(transactions.first.capital_id).user_id
Capital.find_by_id(transactions.first.capital_id)
Capital.find_by_id(transactions.first.capiral_id)
transactions
Capitals.find_by_id(params[:id].to_i)
Capitals.find_by_id(params[:id])
transactions.capital
transactions.capitals
params[:cap_id]
continue
params[:id]
Capital.find_by_id(params[:cap_id])
transactions.capitals
transactions.capital
continue
@transaction
continue
@transaction
continue
capital_params
curr_user
continue
user_params
User.find(params[:id])
params[:id]
continue
params[:id]
continue
curr_user.id
params[:id]
params[:id}
user
continue
@curr_user
continue
curr_user
continue
params[:password]
params[:email]
continue
params[:password]
params[:email]
continue
params[:email]
password
email
continue
password
email
continue
email
user
continue
user
continue
user
continue
options
token
token, options = ActionController::HttpAuthentication::Token.token_and_options(request)
authenticate_with_http_token do |token, options| \
authenticate_with_http_token do |token, options|
token
continue
token
user_email
continue
SecureRandom.base64(64)
@current_user
self
continue
@transaction.first.capital_id
@transaction.first.capital
@transaction.first.capitals
@transaction.first.capital
continue
@transaction.first
Capital.find(2).transactions
Capital.find(2)
Transaction.find(2).capital_id
Transaction.find(2)
Capital.find_by_id(@transaction.capital_id)
@transaction.capital
@transaction
continue
Capital.find_by(id: params[:cap_id])
Capital.find_by(params[:cap_id])
@this_capital.id
@capital
@capital.id
@transaction.capital_id
params[:cap_id]
continue
params[:cap_id]
continue
params[:cap_id]
continue
Date.today
@transaction = @capital.transactions.build()
@transaction = @capital.transactions.build(date: Date.now)
@capital.transactions = @transaction
continue
params[:capi_type]
continue
params[:capi_type]
continue
params[:capi_type]
continue
params[:capi_type]
continue
params[:capi_type]
continue
params[:capi_type]
continue
params[:capi_type]
continue
params[:capi_type]
continue
@transaction
continue
@this_capital.name
@this_capital
@this_capital.transactions.date
@this_capital.transactions
@this_capital
continue
a[:description]
a[:description
a[:name]
a.name
a
continue
params[:name]
continue
capital.description
capital
capital = @capital.find_by_id(1)
continue
@capital
@capital.description
@capital
continue
a[:amount].to_d
a[:amount].to_n
a[:amount].to_f
a[:amount]
continue
@payable_transaction.payable.amount + 10
@payable_transaction.payable.amount
a[:cash_type] == "Cash In"
a[:cash_type]
a[date]
a[:date]
params[:date]
a[:amount]
a.amount
a
continue
params[:amount]
continue
params[:cash_method]
params[:cash_type]
continue
receivable_transaction_params
params[:amount]
continue
@payable_transaction.payable.amount
@payable_transaction.payable
@payable_transaction.payables
@payable_transaction.payable
@payable_transaction
continue
@payable_transaction
@this_payable_payout
continue
@this_receivable
params[:receive_id]
continue
params[:receive_id]
continue
@this_payable
continue
@this_payable
continue
@this_payable
continue
@this_payable
continue
@this_payable
continue
@payable_transaction
continue
@payable_transaction
continue
@payable_transaction
@this_payable
params[:pay_id]
continue
@this_payable
params[:pay_id]
continue
@payable_transaction
@this_payable
continue
@payable_transaction
@this_payable
continue
params[:pay_id]
@this_payable
continue
@payable_transaction
@this_payable
continue
@this_payable
